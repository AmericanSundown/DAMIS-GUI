<?php

namespace Damis\EntitiesBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
*
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParametervalueRepository extends EntityRepository
{
    public function getOrderedParameters($workflowTask)
    {
        $query = $this->createQueryBuilder('pv')
            ->select('pv')
            ->leftJoin('pv.parameter', 'p')
            ->andWhere('pv.workflowtask = :w')
            ->setParameter('w', $workflowTask)
            ->addOrderBy('p.position', 'ASC');

        return $query->getQuery()->getResult();
    }

    public function getValueBySlug($task, $slug){
        $query = $this->createQueryBuilder('pv')
            ->select('pv.parametervalue')
            ->leftJoin('pv.parameter', 'p')
            ->andWhere('pv.workflowtask = :w')
            ->andWhere('p.slug = :s')
            ->setParameter('w', $task)
            ->setParameter('s', $slug)
            ->setMaxResults(1);

        return $query->getQuery()->getOneOrNullResult();
    }

    public function getParameterByType($task, $type){
        $query = $this->createQueryBuilder('pv')
            ->select('pv')
            ->leftJoin('pv.parameter', 'p')
            ->andWhere('pv.workflowtask = :w')
            ->andWhere('p.connectionType = :s')
            ->setParameter('w', $task)
            ->setParameter('s', $type)
            ->setMaxResults(1);

        return $query->getQuery()->getOneOrNullResult();
    }

    public function getValueByType($task, $type){
        $query = $this->createQueryBuilder('pv')
            ->select('pv.parametervalue')
            ->leftJoin('pv.parameter', 'p')
            ->andWhere('pv.workflowtask = :w')
            ->andWhere('p.connectionType = :s')
            ->setParameter('w', $task)
            ->setParameter('s', $type)
            ->setMaxResults(1);

        return $query->getQuery()->getOneOrNullResult();
    }

    public function checkDatasets($id){
        $query = $this->createQueryBuilder('pv')
            ->select('pv')
            ->leftJoin('pv.parameter', 'p')
            ->andWhere('pv.parametervalue = :id')
            ->andWhere('p.connectionType = 2')
            ->setParameter('id', $id)
            ->setMaxResults(1);

        return $query->getQuery()->getOneOrNullResult();
    }
}
